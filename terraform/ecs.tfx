# Create AWS ECS cluster and enable insights

# ------------------------------------------------- Cluster ------------------------------------------------------------

resource "aws_ecs_cluster" "ecs_cluster" {
  name = "ecs_cluster"

# CloudWatch automatically collects data on containers
  setting {
    name  = "containerInsights"
    value = "enabled"
  }
}

data "aws_caller_identity" "tracktech-current" {}

data "aws_iam_role" "ecs_task_execution_role" {
  name = "labrole"
}

# Fetch gitlab credentials arn from secrets manager
#data "aws_secretsmanager_secret" "tracktech-secret-arn" {
#  arn = "${aws_secretsmanager_secret.tracktech-secretsmanager-gitlab-credentials2.arn}"
#}

#change arn 
# Fetch gitlab credentials arn from secrets manager
data "aws_secretsmanager_secret" "tracktech-secret-arn" {
  arn = "arn:aws:secretsmanager:us-east-1:943055624990:secret:tracktech-secretsmanager-gitlab-credentials2-ozIpCP"
}

# ------------------------------------------------- Service ------------------------------------------------------------
# AWS SERVICE
resource "aws_ecs_service" "ecs_service" {
  name            = "tracktech-service"
  cluster         = aws_ecs_cluster.ecs_cluster.name
  task_definition = aws_ecs_task_definition.ecs_task_definition.arn
  desired_count   = 1
  launch_type     = "FARGATE"

  network_configuration {
    subnets          = module.tracktech-vpc.public_subnets
    security_groups  = [aws_security_group.tracktech-ecs-sg.id]
    assign_public_ip = true
  }
  #load_balancer {
  #  target_group_arn = aws_lb_target_group.tracktech-aws-lb-target-group.arn
  #  container_name   = "tracktech-container-frontend"
  #  container_port   = 80
  #}


  depends_on = [aws_ecs_cluster.ecs_cluster, aws_ecs_task_definition.ecs_task_definition, aws_security_group.tracktech-ecs-sg]

}

# ------------------------------------------------- Tasks ------------------------------------------------------------


# AWS TASK DEFINITION
resource "aws_ecs_task_definition" "ecs_task_definition" {
  family                   = "tracktech-task"
  network_mode             = "awsvpc"
  requires_compatibilities = ["FARGATE"]
  cpu                      = "2048"
  memory                   = "8192"

  execution_role_arn = data.aws_iam_role.ecs_task_execution_role.arn

  container_definitions = jsonencode([
    {
      "name": "tracktech-container",
      "image": "registry.gitlab.com/tester6133705/tracktech:web1",
      "repositoryCredentials": {
        "credentialsParameter": "${data.aws_secretsmanager_secret.tracktech-secret-arn.arn}"
      },
      "memory": 2048,
      "cpu": 512,
      "essential": false,
      "portMappings": [
        {
          "containerPort" : 80,
          "hostPort"      : 80,
          "protocol"      : "tcp"
        }
      ],
      "environment": [
        { name = "DATABASE_HOST", value = "tracktech-container-db" }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "awslogs-tracktech",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "awslogs-frontend"
        }
      }
    },

    
    {
      "name"  = "tracktech-container-db",
      "image" = "timescale/timescaledb-ha:pg15.5-ts2.13.1-all",
      "memory": 2048,
      "cpu": 512,
      "essential": false,
      "portMappings" = [
        {
          "containerPort"    : 5432,
          "hostPort"         : 5432,
          "protocol"         : "tcp"
        }
      ],
      "environment": [
        { name = "POSTGRES_USER", value = var.aws_db_username },
        { name = "POSTGRES_PASSWORD", value = var.aws_db_password }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "awslogs-tracktech",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "awslogs-db"
        }
      }
    },


    {
      "name": "tracktech-container-backend",
      "image": "registry.gitlab.com/tester6133705/tracktech:back1",
      "repositoryCredentials": {
        "credentialsParameter": "${data.aws_secretsmanager_secret.tracktech-secret-arn.arn}"
      },
      "memory": 2048,
      "cpu": 512,
      "essential": true,
      "portMappings": [
        {
          "containerPort"   : 6587,
          "hostPort"        : 6587,
          "protocol"        : "tcp"
        }
      ],
      "environment": [
        { name = "DATABASE_HOST", value = "tracktech-container-db" }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "awslogs-tracktech",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "awslogs-backend"
        }
      }
    },
  ])
}